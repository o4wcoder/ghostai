uniform float2 iResolution;
uniform float iTime;
uniform float isSpeaking;

half4 main(float2 fragCoord) {
    float2 uv = fragCoord / iResolution;
    uv -= 0.5;
    uv.y *= 1.2;

    // Tail animation
    float tailWave = 0.05 * sin(uv.x * 12.0 + iTime * 2.0);
    float tailFactor = smoothstep(0.0, -0.3, uv.y);
    uv.y += tailWave * tailFactor;

    // Ghost body
    float radius = 0.4;
    float dist = length(uv);
    float body = smoothstep(radius, radius - 0.1, dist);

    // ==== BLINK TIMING ====
    // Change seed every few seconds
    float blinkSeed = floor(iTime / 6.0);
    float rand = fract(sin(blinkSeed * 91.345) * 47453.25);
    float nextBlinkTime = blinkSeed * 6.0 + rand * 3.0; // blink happens between 6â€“9s
    float blinkDuration = 0.15;

    // Determine if currently blinking
    float timeSinceBlink = iTime - nextBlinkTime;
    float isBlinking = step(0.0, timeSinceBlink) * step(timeSinceBlink, blinkDuration);

    // Eyes open by default; squashed vertically when blinking
    float eyeRadiusX = 0.05;
    float eyeRadiusY = mix(0.05, 0.005, isBlinking); // squash vertically during blink

    float2 leftEye = float2(-0.15, 0.05);
    float2 rightEye = float2(0.15, 0.05);

    float2 leftDelta = uv - leftEye;
    float2 rightDelta = uv - rightEye;

    float leftEyeShape = step(length(float2(leftDelta.x / eyeRadiusX, leftDelta.y / eyeRadiusY)), 1.0);
    float rightEyeShape = step(length(float2(rightDelta.x / eyeRadiusX, rightDelta.y / eyeRadiusY)), 1.0);

    float eyes = leftEyeShape + rightEyeShape;

    // Glow and final color
    float glow = 0.4 + 0.4 * isSpeaking;
    float3 color = mix(float3(0.0), float3(0.2 + glow, 1.0, 0.2 + glow), body);

    if (eyes > 0.0) {
        color = float3(0.0); // black eyes
    }

    float alpha = max(body, eyes);
    return half4(color, alpha);
}


